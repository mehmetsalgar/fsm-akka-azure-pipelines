parameters:
  - name: definitionId
    type: string
  - name: sourceBranch
    type: string
  - name: inputs
    type: string 

steps:
  - task: PowerShell@2
    displayName: Triggering another pipeline
    env:
      SECURITY_TOKEN: $(System.AccessToken)
      DEFINITION_ID: ${{ parameters.definitionId }}
      SOURCE_BRANCH: ${{ parameters.sourceBranch }}
      INPUTS: ${{ parameters.inputs }}
      TRIGGER_INFO: $(Build.SourceVersionMessage)
    inputs:
      targetType: inline
      script: |
        $url = 'https://dev.azure.com/salgarswtor/fsm-akka-4eyes/_apis/build/builds?api-version=5.0'
        Write-Host  "URL: $url"
        $headers = New-Object "System.Collections.Generic.Dictionary[[String], [String]]"
        $headers.Add("Content-Type", "application/json")
        $headers.Add("Authorization", "Bearer $env:SECURITY_TOKEN")
        $definitionid = $env:DEFINITION_ID
        $inputs = if($null -ne $env:INPUTS) { $env:INPUTS } else { '' }
        $body = '
        {
          "definition": { "id": ' + $definitionid + ' },
          "sourceBranch": "' + $env:SOURCE_BRANCH + '",
          "templateParameters": {' + $inputs + '},
          "triggerInfo": "' + $env:TRIGGER_INFO + '"
        }
        '
        Write-Host  "BODY: $body"
        $response = Invoke-RestMethod $url -Method 'POST' -Headers $headers -Body $body
        Write-Host "Pipeline = ($response | ConvertTo-Json -Depth 100)"
        $buildId = $response.id
        $buildInfo = (Invoke-RestMethod "https://dev.azure.com/salgarswtor/fsm-akka-4eyes/_apis/build/builds/${buildID}?api-version=5.0" -Method Get -Headers $headers)
        while($response.status -eq "inProgress" -or $response.status -eq "notStarted") # keep checking till build completed
        {
            Write-Output "Build is $($response.status)... Sleep for 5 seconds.."
            Start-Sleep -Seconds 5 # Start sleep for 5 seconds
            #$buildInfo = (Invoke-RestMethod "https://dev.azure.com/salgarswtor/fsm-akka-4eyes/_apis/build/builds/${buildID}?api-version=5.0" -Method Get -Headers $headers)
            #Write-Host "BuildInfo = ($buildInfo | ConvertTo-Json -Depth 100)"
            Write-Host "We are not waiting for result because Free Azure Account has only one thread to execute"
            break
        }

        Write-Output "Build Status : $($buildInfo.status)" # print build status
        Write-Output "Build Result : $($buildInfo.result)" # print build result
